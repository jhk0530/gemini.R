[{"path":"https://github.com/jhk0530/gemini.R/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Jinhwan Kim Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/jhk0530/gemini.R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jinhwan Kim. Author, maintainer, copyright holder. Maciej Nasinski. Contributor.","code":""},{"path":"https://github.com/jhk0530/gemini.R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kim J (2025). gemini.R: Interface 'Google Gemini' API. R package version 0.11.0, https://github.com/jhk0530/gemini.R.","code":"@Manual{,   title = {gemini.R: Interface for 'Google Gemini' API},   author = {Jinhwan Kim},   year = {2025},   note = {R package version 0.11.0},   url = {https://github.com/jhk0530/gemini.R}, }"},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"geminir-","dir":"","previous_headings":"","what":"Interface for Google Gemini API","title":"Interface for Google Gemini API","text":"R package use Google’s gemini via API R","code":""},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"from-cran","dir":"","previous_headings":"Installation","what":"From CRAN","title":"Interface for Google Gemini API","text":"","code":"install.packages(\"gemini.R\")"},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"from-r-universe-development-version","dir":"","previous_headings":"Installation","what":"From R-universe (development version)","title":"Interface for Google Gemini API","text":"","code":"install.packages(\"gemini.R\",   repos = c(\"https://jhk0530.r-universe.dev\", \"https://cloud.r-project.org\") )"},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"from-github-development-version","dir":"","previous_headings":"Installation","what":"From Github (development version)","title":"Interface for Google Gemini API","text":"","code":"# install.packages(\"pak\") pak::pak(\"jhk0530/gemini.R\")"},{"path":[]},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"text","dir":"","previous_headings":"Usage > Gemini with AI Studio API","what":"Text","title":"Interface for Google Gemini API","text":"","code":"library(gemini.R)  setAPI(\"your API key\") # check https://makersuite.google.com/app/apikey gemini(\"Explain about the gemini in astrology in one line\")  # text # \"Gemini, the third astrological sign, is associated with # communication, adaptability, and a thirst for knowledge.\""},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"image","dir":"","previous_headings":"Usage > Gemini with AI Studio API","what":"Image","title":"Interface for Google Gemini API","text":"","code":"# uses default prompt as \"Explain this image\" # uses included image of gemini.R package gemini_image(image = system.file(\"docs/reference/figures/image.png\", package = \"gemini.R\"))  # text # \" The image shows a table with a white tablecloth. On the table are two cups of coffee, # a bowl of blueberries, and five scones. The scones are covered in blueberries and have # a crumbly texture. There are also some pink flowers on the table. The background is a # dark blue color. The image is taken from a top-down perspective.\""},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"audio","dir":"","previous_headings":"Usage > Gemini with AI Studio API","what":"Audio","title":"Interface for Google Gemini API","text":"","code":"# use default prompt as \"Describe this audio\" # uses included audio of gemini.R package gemini_audio(audio = system.file(\"docs/reference/helloworld.mp3\", package = \"gemini.R\"))  # text # \"The audio contains a clear, crisp recording of a person saying \\\"Hello world\\\". # Following the phrase is a distinct, repeated percussive sound, possibly a rhythmic # tapping or clicking noise. The sound is consistent and mechanical in nature.\\n\""},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"image-via-shiny","dir":"","previous_headings":"Usage > Gemini with AI Studio API","what":"Image via Shiny","title":"Interface for Google Gemini API","text":"use gemini_image function, image file required. recommend use shiny app fileInput function.","code":"library(shiny) library(gemini.R)  setAPI(\"YOUR KEY\") ui <- fluidPage(   sidebarLayout(     NULL,     mainPanel(       fileInput(         inputId = \"file\",         label = \"Choose file to upload\",       ),       imageOutput(outputId = \"image1\"),       textInput(         inputId = \"prompt\",         label = \"Prompt\",         placeholder = \"Enter Prompts Here\"       ),       actionButton(\"goButton\", \"Ask to gemini\"),       textOutput(\"text1\")     )   ) )  server <- function(input, output) {    observeEvent(input$file, {     path <- input$file$datapath     output$image1 <- renderImage({       list(         src = path       )     }, deleteFile = FALSE)   })    observeEvent(input$goButton, {     output$text1 <- renderText({       gemini_image(input$prompt, input$file$datapath)     })   }) }  shinyApp(ui = ui, server = server)"},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"text-1","dir":"","previous_headings":"Usage > Gemini with Vertex AI API","what":"Text","title":"Interface for Google Gemini API","text":"","code":"tokens <- token.vertex(\"YOUR_API_KEY.json\", model_id = \"1.5-flash\") prompt <- \"What is sachins Jersy number?\"  gemini.vertex(prompt, tokens)"},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"image-1","dir":"","previous_headings":"Usage > Gemini with Vertex AI API","what":"Image","title":"Interface for Google Gemini API","text":"","code":"tokens <- token.vertex(\"YOUR_API_KEY.json\", model_id = \"1.5-flash\")  gemini_image.vertex(image = \"YOUR_IMAGE.png\", type, tokens)"},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"audio-1","dir":"","previous_headings":"Usage > Gemini with Vertex AI API","what":"Audio","title":"Interface for Google Gemini API","text":"File upload Google Cloud using API supported. Instead must use uploaded file. (e.g. Google Cloud Storage) Example sound soundbible","code":"tokens <- token.vertex(\"YOUR_API_KEY.json\", model_id = \"1.5-flash\")  gemini_audio.vertex(audio = \"YOUR_AUDIO.mp3\", tokens)"},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"image-generation","dir":"","previous_headings":"Usage > Gemini with Vertex AI API","what":"Image generation","title":"Interface for Google Gemini API","text":"","code":"gen_image('Draw an image of a cat swimming in the Milky Way')"},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"function-documentation-roxygen","dir":"","previous_headings":"Usage > Rstudio Addins","what":"Function documentation (Roxygen)","title":"Interface for Google Gemini API","text":"may customize keyboard shortcut feature.","code":""},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/index.html","id":"terms","dir":"","previous_headings":"","what":"Terms","title":"Interface for Google Gemini API","text":"use API, recommend check least following. Google Cloud Platform Terms Service Gemini API Additional Terms Service may terms conditions need check. app uses API compliant Google Terms Service. [!note] image Google AI Developers ’ve got many inspiration Deepanshu Bhalla’s article","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/addHistory.html","id":null,"dir":"Reference","previous_headings":"","what":"Add history for chating context — addHistory","title":"Add history for chating context — addHistory","text":"Add history chating context","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/addHistory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add history for chating context — addHistory","text":"","code":"addHistory(history, role = NULL, item = NULL)"},{"path":"https://github.com/jhk0530/gemini.R/reference/addHistory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add history for chating context — addHistory","text":"history history chat role role chat: \"user\" \"model\" item item chat: \"prompt\" \"output\"","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/addHistory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add history for chating context — addHistory","text":"history chat","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/countTokens.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Tokens for Gemini Content (Including Images) — countTokens","title":"Count Tokens for Gemini Content (Including Images) — countTokens","text":"Calculates token count given content, including text image data, using Vertex AI Gemini API.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/countTokens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Tokens for Gemini Content (Including Images) — countTokens","text":"","code":"countTokens(   jsonkey = NULL,   model_id = NULL,   content = NULL,   region = \"us-central1\" )"},{"path":"https://github.com/jhk0530/gemini.R/reference/countTokens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Tokens for Gemini Content (Including Images) — countTokens","text":"jsonkey path JSON file containing service account key Vertex AI. model_id ID Gemini model. content content (text, image, list text/image parts) count tokens. text, provide string. images, provide list data (base64 encoded image) mimeType (e.g., \"image/png\", \"image/jpeg\"). multiple content parts, provide list element either text string image list. region Google Cloud region Vertex AI resources located (default \"us-central1\"). See https://cloud.google.com/vertex-ai/docs/regions available regions.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/countTokens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Tokens for Gemini Content (Including Images) — countTokens","text":"numeric value representing token count content.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/countTokens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Tokens for Gemini Content (Including Images) — countTokens","text":"","code":"if (FALSE) { # \\dontrun{ library(gemini.R)  # For text content key_file <- \"YOURAPIKEY.json\" model <- \"2.0-flash\" token_count_text <- countTokens(   jsonkey = key_file,    model_id = model,    content = \"Hello, world!\" ) print(token_count_text)  # For image content (assuming 'image.jpg' is in your working directory) image_data <- base64enc::base64encode(\"image.jpg\") image_content <- list(data = image_data, mimeType = \"image/jpeg\") token_count_image <- countTokens(   jsonkey = key_file,   model_id = model,   content = image_content ) print(token_count_image)  # For multiple content parts (text and image) content_parts <- list(   list(text = \"This is the first part.\"),   list(data = image_data, mimeType = \"image/jpeg\"),   list(text = \"This is the last part\") ) token_count_parts <- countTokens(   jsonkey = key_file,   model_id = model,   content = content_parts ) print(token_count_parts) } # }"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text from text with Gemini — gemini","title":"Generate text from text with Gemini — gemini","text":"Generate text text Gemini","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text from text with Gemini — gemini","text":"","code":"gemini(   prompt,   model = \"2.0-flash\",   temperature = 1,   maxOutputTokens = 8192,   topK = 40,   topP = 0.95,   seed = 1234 )"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text from text with Gemini — gemini","text":"prompt prompt generate text model model use. Options \"2.0-flash\", \"2.0-flash-lite\", \"2.5-pro-exp-03-25\". Default '2.0-flash'. see https://ai.google.dev/gemini-api/docs/models/gemini temperature temperature use. Default 1 value 0 2 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters maxOutputTokens maximum number tokens generate. Default 8192 100 tokens correspond roughly 60-80 words. topK top-k value use. Default 40 value 0 100 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters topP top-p value use. Default 0.95 value 0 1 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters seed seed use. Default 1234 value integer see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text from text with Gemini — gemini","text":"Generated text","code":""},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text from text with Gemini — gemini","text":"","code":"if (FALSE) { # \\dontrun{ library(gemini.R) setAPI(\"YOUR_API_KEY\") gemini(\"Explain dplyr's mutate function\") } # }"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.vertex.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text from text with Gemini Vertex API — gemini.vertex","title":"Generate text from text with Gemini Vertex API — gemini.vertex","text":"Generate text text Gemini Vertex API","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.vertex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text from text with Gemini Vertex API — gemini.vertex","text":"","code":"gemini.vertex(   prompt = NULL,   tokens = NULL,   temperature = 1,   maxOutputTokens = 8192,   topK = 40,   topP = 0.95,   seed = 1234 )"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.vertex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text from text with Gemini Vertex API — gemini.vertex","text":"prompt character string containing prompt Gemini model. tokens list containing API URL key token.vertex() function. temperature temperature use. Default 1 value 0 2 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters maxOutputTokens maximum number tokens generate. Default 8192 100 tokens correspond roughly 60-80 words. topK top-k value use. Default 40 value 0 100 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters topP top-p value use. Default 0.95 value 0 1 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters seed seed use. Default 1234 value integer see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.vertex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text from text with Gemini Vertex API — gemini.vertex","text":"character string containing generated text.","code":""},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini.vertex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text from text with Gemini Vertex API — gemini.vertex","text":"","code":"if (FALSE) { # \\dontrun{ # token should be created before this. using the token.vertex() function prompt <- \"What is sachins Jersey number?\" gemini.vertex(prompt, tokens) } # }"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_audio.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze audio using Gemini — gemini_audio","title":"Analyze audio using Gemini — gemini_audio","text":"function sends audio Gemini API returns text description.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_audio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze audio using Gemini — gemini_audio","text":"","code":"gemini_audio(   audio = NULL,   prompt = \"Describe this audio\",   model = \"2.0-flash\",   temperature = 1,   maxOutputTokens = 8192,   topK = 40,   topP = 0.95,   seed = 1234 )"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_audio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze audio using Gemini — gemini_audio","text":"audio Path audio file (default: uses sample file). Must MP3. prompt string describing audio. model model use. Options \"2.0-flash\", \"2.0-flash-lite\", \"2.5-pro-exp-03-25\". Default '2.0-flash' see https://ai.google.dev/gemini-api/docs/models/gemini temperature temperature use. Default 1 value 0 2 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters maxOutputTokens maximum number tokens generate. Default 8192 100 tokens correspond roughly 60-80 words. topK top-k value use. Default 40 value 0 100 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters topP top-p value use. Default 0.95 value 0 1 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters seed seed use. Default 1234 value integer see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_audio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze audio using Gemini — gemini_audio","text":"character vector containing Gemini API's response.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_audio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze audio using Gemini — gemini_audio","text":"","code":"if (FALSE) { # \\dontrun{ library(gemini.R) setAPI(\"YOUR_API_KEY\") gemini_audio(audio = system.file(\"docs/reference/helloworld.mp3\", package = \"gemini.R\")) } # }"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_audio.vertex.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Audio using Gemini Vertex API — gemini_audio.vertex","title":"Analyze Audio using Gemini Vertex API — gemini_audio.vertex","text":"function sends audio Gemini API returns text description.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_audio.vertex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Audio using Gemini Vertex API — gemini_audio.vertex","text":"","code":"gemini_audio.vertex(   audio = NULL,   prompt = \"Describe this audio\",   tokens = NULL,   temperature = 1,   maxOutputTokens = 8192,   topK = 40,   topP = 0.95,   seed = 1234 )"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_audio.vertex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Audio using Gemini Vertex API — gemini_audio.vertex","text":"audio Path audio file (character string). supports \"mp3\". prompt prompt guide Gemini API's analysis (character string, defaults \"Describe audio\"). tokens list containing API URL key token.vertex() function. temperature temperature use. Default 1 value 0 2 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters maxOutputTokens maximum number tokens generate. Default 8192 100 tokens correspond roughly 60-80 words. topK top-k value use. Default 40 value 0 100 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters topP top-p value use. Default 0.95 value 0 1 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters seed seed use. Default 1234 value integer see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_audio.vertex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Audio using Gemini Vertex API — gemini_audio.vertex","text":"character vector containing Gemini API's description audio.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-turn conversations (chat) — gemini_chat","title":"Multi-turn conversations (chat) — gemini_chat","text":"Generate text text Gemini","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-turn conversations (chat) — gemini_chat","text":"","code":"gemini_chat(   prompt,   history = list(),   model = \"2.0-flash\",   temperature = 1,   maxOutputTokens = 8192,   topK = 40,   topP = 0.95,   seed = 1234 )"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_chat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi-turn conversations (chat) — gemini_chat","text":"prompt prompt generate text history history object keep track conversation model model use. Options \"2.0-flash\", \"2.0-flash-lite\", \"2.5-pro-exp-03-25\". Default '2.0-flash' see https://ai.google.dev/gemini-api/docs/models/gemini temperature temperature use. Default 1 value 0 2 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters maxOutputTokens maximum number tokens generate. Default 8192 100 tokens correspond roughly 60-80 words. topK top-k value use. Default 40 value 0 100 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters topP top-p value use. Default 0.95 value 0 1 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters seed seed use. Default 1234 value integer see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_chat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multi-turn conversations (chat) — gemini_chat","text":"Generated text","code":""},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_chat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multi-turn conversations (chat) — gemini_chat","text":"","code":"if (FALSE) { # \\dontrun{ library(gemini.R) setAPI(\"YOUR_API_KEY\")  chats <- gemini_chat(\"Pretend you're a snowman and stay in character for each\") print(chats$outputs)  chats <- gemini_chat(\"What's your favorite season of the year?\", chats$history) print(chats$outputs)  chats <- gemini_chat(\"How do you think about summer?\", chats$history) print(chats$outputs) } # }"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text from text and image with Gemini — gemini_image","title":"Generate text from text and image with Gemini — gemini_image","text":"Generate text text image Gemini","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text from text and image with Gemini — gemini_image","text":"","code":"gemini_image(   image = NULL,   prompt = \"Explain this image\",   model = \"2.0-flash\",   temperature = 1,   maxOutputTokens = 8192,   topK = 40,   topP = 0.95,   seed = 1234,   type = \"png\" )"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text from text and image with Gemini — gemini_image","text":"image image generate text prompt prompt generate text, Default \"Explain image\" model model use. Options \"2.0-flash\", \"2.0-flash-lite\", \"2.5-pro-exp-03-25\". Default '2.0-flash' see https://ai.google.dev/gemini-api/docs/models/gemini temperature temperature use. Default 1 value 0 2 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters maxOutputTokens maximum number tokens generate. Default 8192 100 tokens correspond roughly 60-80 words. topK top-k value use. Default 40 value 0 100 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters topP top-p value use. Default 0.95 value 0 1 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters seed seed use. Default 1234 value integer see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters type type image. Options 'png', 'jpeg', 'webp', 'heic', 'heif'. Default 'png'","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text from text and image with Gemini — gemini_image","text":"Generated text","code":""},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text from text and image with Gemini — gemini_image","text":"","code":"if (FALSE) { # \\dontrun{ library(gemini.R) setAPI(\"YOUR_API_KEY\") gemini_image(image = system.file(\"docs/reference/figures/image.png\", package = \"gemini.R\")) } # }"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_image.vertex.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text from text and image with Gemini Vertex API — gemini_image.vertex","title":"Generate text from text and image with Gemini Vertex API — gemini_image.vertex","text":"Generate text text image Gemini Vertex API","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_image.vertex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text from text and image with Gemini Vertex API — gemini_image.vertex","text":"","code":"gemini_image.vertex(   image = NULL,   prompt = \"Explain this image\",   type = \"png\",   tokens = NULL,   temperature = 1,   maxOutputTokens = 8192,   topK = 40,   topP = 0.95,   seed = 1234 )"},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_image.vertex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text from text and image with Gemini Vertex API — gemini_image.vertex","text":"image image generate text prompt character string specifying prompt use image. Defaults \"Explain image\". type character string specifying image type (\"png\", \"jpeg\", \"webp\", \"heic\", \"heif\"). Defaults \"png\". tokens list containing API URL key token.vertex() function. temperature temperature use. Default 1 value 0 2 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters maxOutputTokens maximum number tokens generate. Default 8192 100 tokens correspond roughly 60-80 words. topK top-k value use. Default 40 value 0 100 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters topP top-p value use. Default 0.95 value 0 1 see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters seed seed use. Default 1234 value integer see https://ai.google.dev/gemini-api/docs/models/generative-models#model-parameters","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gemini_image.vertex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text from text and image with Gemini Vertex API — gemini_image.vertex","text":"character string containing Gemini's description image.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_docs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Roxygen Documentation — gen_docs","title":"Generate Roxygen Documentation — gen_docs","text":"Generates Roxygen2 documentation R function based currently selected code.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_docs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Roxygen Documentation — gen_docs","text":"","code":"gen_docs(prompt = NULL)"},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_docs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Roxygen Documentation — gen_docs","text":"prompt character string specifying additional instructions LLM.  Defaults prompt requesting Roxygen2 documentation without original code.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_docs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Roxygen Documentation — gen_docs","text":"character string containing generated Roxygen2 documentation.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate and save image using Gemini — gen_image","title":"Generate and save image using Gemini — gen_image","text":"Generate image using Gemini's image generation capabilities save file","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate and save image using Gemini — gen_image","text":"","code":"gen_image(   prompt,   filename = \"gemini_image.png\",   overwrite = TRUE,   model = \"2.0-flash-exp-image-generation\",   temperature = 1,   seed = 1234 )"},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate and save image using Gemini — gen_image","text":"prompt prompt generate image filename filename save image . Default \"gemini_image.png\" overwrite Logical, whether overwrite existing file. Default TRUE model model use. Default \"2.0-flash-exp-image-generation\" temperature temperature use. Default 1 seed seed use. Default 1234","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate and save image using Gemini — gen_image","text":"path saved file","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate and save image using Gemini — gen_image","text":"","code":"if (FALSE) { # \\dontrun{ library(gemini.R) setAPI(\"YOUR_API_KEY\") gen_image(\"Create an image of a cat wearing sunglasses\") } # }"},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates unit test code for an R function. — gen_tests","title":"Generates unit test code for an R function. — gen_tests","text":"Generates unit test code R function.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates unit test code for an R function. — gen_tests","text":"","code":"gen_tests(prompt = NULL)"},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates unit test code for an R function. — gen_tests","text":"prompt character string specifying prompt Gemini model.  NULL, default prompt used.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/gen_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates unit test code for an R function. — gen_tests","text":"#' character string containing generated unit test code.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/setAPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Set API key — setAPI","title":"Set API key — setAPI","text":"Set API key environment variable","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/setAPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set API key — setAPI","text":"","code":"setAPI(api_key)"},{"path":"https://github.com/jhk0530/gemini.R/reference/setAPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set API key — setAPI","text":"api_key API key set","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/setAPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set API key — setAPI","text":"return value, called side effects.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/setAPI.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set API key — setAPI","text":"Please aware agree terms service API provider. app uses API key subject terms service. Also, please aware API key sensitive information.","code":""},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/reference/setAPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set API key — setAPI","text":"","code":"if (FALSE) { # \\dontrun{ setAPI(\"my_api_key\") } # }"},{"path":"https://github.com/jhk0530/gemini.R/reference/setEnv.html","id":null,"dir":"Reference","previous_headings":"","what":"Store API key in local environment file — setEnv","title":"Store API key in local environment file — setEnv","text":"Saves API key local .Renviron file persistent access across R sessions","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/setEnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store API key in local environment file — setEnv","text":"","code":"setEnv(api_key, overwrite = TRUE, install_message = TRUE)"},{"path":"https://github.com/jhk0530/gemini.R/reference/setEnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store API key in local environment file — setEnv","text":"api_key API key store overwrite Whether overwrite existing API key already present .Renviron (default: TRUE) install_message Whether display message use API (default: TRUE)","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/setEnv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store API key in local environment file — setEnv","text":"return value, called side effects.","code":""},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/reference/setEnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Store API key in local environment file — setEnv","text":"","code":"if (FALSE) { # \\dontrun{ setEnv(\"your_api_key\") } # }"},{"path":"https://github.com/jhk0530/gemini.R/reference/token.vertex.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Gemini Access Token and Endpoint URL — token.vertex","title":"Generate Gemini Access Token and Endpoint URL — token.vertex","text":"Generates access token Gemini model constructs corresponding endpoint URL.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/token.vertex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Gemini Access Token and Endpoint URL — token.vertex","text":"","code":"token.vertex(   jsonkey = NULL,   model_id = NULL,   expTime = 3600,   region = \"us-central1\" )"},{"path":"https://github.com/jhk0530/gemini.R/reference/token.vertex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Gemini Access Token and Endpoint URL — token.vertex","text":"jsonkey path JSON file containing service account key Vertex AI. model_id ID Gemini model. prepended \"gemini-\". expTime expiration time access token seconds (default 3600 seconds, 1 hour). region Google Cloud region Vertex AI resources located (default \"us-central1\"). See https://cloud.google.com/vertex-ai/docs/general/locations available regions.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/token.vertex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Gemini Access Token and Endpoint URL — token.vertex","text":"list containing: key generated access token. url endpoint URL Gemini model.","code":""},{"path":"https://github.com/jhk0530/gemini.R/reference/token.vertex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Gemini Access Token and Endpoint URL — token.vertex","text":"","code":"if (FALSE) { # \\dontrun{ library(gemini.R) tokens <- token.vertex(jsonkey = \"YOURAPIKEY.json\", model_id = \"1.5-flash\")  # Specify a different region tokens <- token.vertex(jsonkey = \"YOURAPIKEY.json\", model_id = \"1.5-flash\", region = \"europe-west4\") } # }"},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_0110-0-10-0","dir":"Changelog","previous_headings":"","what":"0.11.0","title":"gemini.R 0.10.0","text":"Added Gemini 2.5-pro-exp model (2.5-pro-exp-03-25) Deprecated Gemini 2.0-pro-exp model (2.0-pro-exp-02-05) Now image generation possible gen_image() using 2.0-flash-exp-image-generation model.","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_0100-0-10-0","dir":"Changelog","previous_headings":"","what":"0.10.0","title":"gemini.R 0.10.0","text":"countTokens function countTokens API setEnv function added. Deprecated Gemini 1.5 models (1.5-pro, 1.5-flash) Add CRANlogs badge readme","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_092-0-10-0","dir":"Changelog","previous_headings":"","what":"0.9.2","title":"gemini.R 0.10.0","text":"Modified .Rbuildignore ignore README.md","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_091-0-10-0","dir":"Changelog","previous_headings":"","what":"0.9.1","title":"gemini.R 0.10.0","text":"Add roxygen documents region","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_090-0-10-0","dir":"Changelog","previous_headings":"","what":"0.9.0","title":"gemini.R 0.10.0","text":"Updated parameters across functions (temperature, maxOutputTokens, topK, topP, seed) Adjusted default values: temperature 1 maxOutputTokens 8192, model 2.0-flash","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_081-0-10-0","dir":"Changelog","previous_headings":"","what":"0.8.1","title":"gemini.R 0.10.0","text":"requires region user Vertex AI API","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_080-0-10-0","dir":"Changelog","previous_headings":"","what":"0.8.0","title":"gemini.R 0.10.0","text":"Add Vertex AI new functions: token.vertex(), gemini.vertex(), gemini_image.vertex(), gemini_audio.vertex() functions experimental stage may change future versions.","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_070-0-10-0","dir":"Changelog","previous_headings":"","what":"0.7.0","title":"gemini.R 0.10.0","text":"Generate unit test using gen_test() added. gemini_audio supports mp3. gemini.R supports 2.0-flash-exp model.","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_061-0-10-0","dir":"Changelog","previous_headings":"","what":"0.6.1","title":"gemini.R 0.10.0","text":"Generate roxygen gen_docs() added. terms improved.","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_050-0-10-0","dir":"Changelog","previous_headings":"","what":"0.5.0","title":"gemini.R 0.10.0","text":"gemini.R supports 1.5=flash model. gemini functions require temperature, maxTokenOutput","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_040-0-10-0","dir":"Changelog","previous_headings":"","what":"0.4.0","title":"gemini.R 0.10.0","text":"Updated use httr2 setAPI now shows last 4 words API key confirmation. cat updated using cli better readability console. gemini_image() takes default prompt “Explain image” example image flower. See ?gemini_image","code":""},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"id_030-0-10-0","dir":"Changelog","previous_headings":"","what":"0.3.0","title":"gemini.R 0.10.0","text":"R CMD CHECK longer shows NOTEs WARNINGs. use R-hub check multiple platforms github action","code":""},{"path":[]},{"path":"https://github.com/jhk0530/gemini.R/news/index.html","id":"whats-changed-0-10-0","dir":"Changelog","previous_headings":"0.2.0","what":"What’s changed","title":"gemini.R 0.10.0","text":"Added Multi-turn conversation Chat 💬. See gemini_chat Slight change function documentation. Now generates message inform setAPI API key exist yet.","code":""}]
